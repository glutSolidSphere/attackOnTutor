<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <title>Lobby</title>
		
		<script type="text/javascript" src="/libs/jquery/jquery-3.2.0.min.js"></script>
		<script type="text/javascript" src="/libs/bootstrap-3.3.7-dist/js/bootstrap.min.js"></script>
		<script type="text/javascript" src="/libs/socket.io-1.7.3/js/socket.io.min.js"></script>
		<script type="text/javascript" src="/libs/angular-1.6.3/angular.min.js"></script>
		<script type="text/javascript" src="/libs/angular-1.6.3/angular-sanitize.min.js"></script>

		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-module.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-socket-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-student-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-tutor-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-chat-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-activeusers-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-tutor-battle-controller.js"></script>
		<script type="text/javascript" src="/javascripts/Lobby/lobby-angular-student-battle-controller.js"></script>
		
        <link rel="stylesheet" href="/libs/bootstrap-3.3.7-dist/css/bootstrap.min.css">
		<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Kanit:200|Roboto">
		<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=VT323">
		<link rel="stylesheet" type="text/css" href="/css/lobby.css">
		<link rel="stylesheet" type="text/css" href="/css/navigationbar.css">
		
        <script>
			window.userId = "<%= userId %>";
            window.moduleId = "<%= moduleId %>";
            window.tutorialId = "<%= tutorialId %>";
            window.username = "<%= username %>";
            window.userRole = "<%= userRole %>";
            window.tutorialUuid = "<%= tid %>";
        </script>
		
		<!--
			//BG Color : #cdc8b0
			//Panel Color : #dad4bb
			//Lighter Panel Color : #b4af9a
			//Header Color : #635f54
			//Drop Shadow Color : #9a9784
			//Text background : rgb(255,255,255,0.5)
			//Chat background : rbg(0,0,0,0.1)
			-->
		<style>
		
			/* Chat Styles */
			
			
		
			/* QA MODE STYLES */
			.default-style-button
			{
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				background-color:#b4af9a;
				color:#635f54;
				border:none;
				
				height:3vw;
				font-size:2vw;
				cursor:pointer;
				font-family: 'VT323', monospace;
				text-align:center;
			}
			
			.default-style-button:focus, .default-style-button:active
			{
				outline:none;
				border:1px solid #9a9784;
				cursor:pointer;
			}
			
			.default-style-button:hover
			{
				color:#dad4bb;
				background-color:#635f54;
				cursor:pointer;
			}
			
			.default-style-button[disabled]:hover
			{
				color:#dad4bb;
				background-color:#9a9784;
				outline:none;
				border:none;
				cursor:no-drop;
			}
			
			.default-style-button[disabled]
			{
				color:#dad4bb;
				background-color:#b4af9a;
				outline:none;
				border:none;
				cursor:no-drop;
			}
			
			.tutor-qa-left-container
			{
				position:fixed;
				left:3.5vw;
				top:6.5vw;
				width:25vw;
				height:auto;
			}
			
			.tutor-qa-tutor-details-container, .student-qa-tutor-details-container
			{
				background-color:#DAD4BB;
				position:relative;
				padding-top:4.5vw;
				padding-bottom:1.5vw;
				box-shadow:0.7vw 0.7vw #9a9784;
				text-align:center;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-tutor-name-header, .student-qa-tutor-name-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
			}
			
			.tutor-qa-tutor-avatar-container, .student-qa-tutor-avatar-container
			{
				background-color: #b4af9a;
				width: calc(100% - 3vw);
				height: 10vw;
				margin-left:1.5vw;
				margin-right:1.5vw;
			}
			
			.tutor-qa-tutor-avatar-icon, .student-qa-tutor-avatar-icon
			{
				width : 10vw;
				height : 10vw;
				margin-left : calc(50% - 5vw);
				background-repeat: no-repeat;
				background-size: cover;
			}
			
			.tutor-qa-tutor-health-container, .student-qa-tutor-health-container
			{
				width: calc(100% - 3vw);
				margin-left:1.5vw;
				margin-right:1.5vw;
				height : 2vw;
				position:relative;
				background-color:#b4af9a;
			}
			
			.tutor-qa-tutor-health-text, .student-qa-tutor-health-text
			{
				position:absolute;
				left:50%;
				margin-left:-25%;
				font-size:1.5vw;
				color:#635f54;
			}
			
			.active-users-container
			{
				position:relative;
				background-color:#DAD4BB;
				margin-top:1.5vw;
				padding-top:3.5vw;
			}
			
			.active-users-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#DAD4BB;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
				
				font-family: 'VT323', monospace;
			}
			
			.active-users-list
			{
				height: 4vw;
				width: 100%;
				margin-left:0.5vw;
				margin-right:0.5vw;
				overflow: hidden;
			}
			
			.active-users-list-group-container
			{
				height: 3vw;
				width: 1000vw;
			}
			
			.scroll-bar-container
			{
				height: 2vw;
				width: calc(100% - 1vw);
				background-color:#b4af9a;
				margin-left:0.5vw;
				position:relative;
			}
			
			.scroll-bar-text
			{
				font-size:1.5vw;
				text-align:center;
				color:#dad4bb;
				font-family: 'VT323', monospace;
			}
			
			.users-list-scroll-left
			{
				height:0;
				width:0;
				position:absolute;
				left:0.5vw;
				top:0.5vw;
				border-top: 0.5vw solid transparent;
				border-bottom: 0.5vw solid transparent;
				border-right: 0.86vw solid #635f54;
				cursor:pointer;
			}
			
			.users-list-scroll-left:before
			{
				content:"";
				position:absolute;
				background-color:#635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height: 1vw;
				width: 0.3vw;
				top: -0.5vw;
				right: -1vw;
				opacity : 0;
				
			}
			
			.users-list-scroll-left:hover:before
			{
				right: -1.5vw;
				opacity : 1;
			}
			
			.users-list-scroll-right
			{
				height:0;
				width:0;
				position:absolute;
				right:0.5vw;
				top:0.5vw;
				border-top: 0.5vw solid transparent;
				border-bottom: 0.5vw solid transparent;
				border-left: 0.86vw solid #635f54;
				cursor:pointer;
			}
			
			.users-list-scroll-right:before
			{
				content:"";
				position:absolute;
				background-color:#635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height: 1vw;
				width: 0.3vw;
				top: -0.5vw;
				left: -1vw;
				opacity : 0;
				
			}
			
			.users-list-scroll-right:hover:before
			{
				left: -1.5vw;
				opacity : 1;
			}
			
			.select-group
			{
				width:5.6vw;
				font-size:1vw;
				margin-right:0.5vw;
				position:relative;
				display:inline-block;
			}
			
			.select-group-button
			{
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				background-color:#b4af9a;
				color:#dad4bb;
				border:none;
				
				height:3vw;
				font-size:1.5vw;
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
				
				font-family: 'VT323', monospace;
			}
			
			.select-group-button:focus, .select-group-button:active
			{
				outline:none;
				border:none;
			}
			
			.select-group-button:hover
			{
				color:#635f54;
			}
			
			.select-group-button::before {
				content:"";
				position:absolute;
				background-color:#b4af9a;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:0px;
				width:100%;
				top:100%;
				left:0;
				opacity : 0;
			}
			
			.select-group.selected .select-group-button::before
			{
				height : 1.7vw;
				top:100%;
				opacity : 1;
			}
			
			.select-group-button::after {
				content:"";
				position:absolute;
				background-color:#635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:100%;
				width:0.5vw;
				bottom:0;
				left:0;
				opacity : 0;
			}
			
			.select-group.selected .select-group-button::after
			{
				width : 0.5vw;
				height:100%;
				bottom:0;
				opacity : 1;
			}
			
			.user-active-list
			{
				max-height: 12vw;
				min-height: 12vw;
				height: 12vw;
				overflow-y: scroll;
				padding-top: 0.5vw;
				margin-left:0.5vw;
				margin-right:0.5vw;
			}
			
			.user-active
			{
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				margin-right: 1.5vw;
				margin-bottom : 1vw;
				padding-left: 1.5vw;
				position:relative;
				cursor:pointer;
			}
		
			.user-active:hover
			{
				background-color:#b4af9a;
				color:#cdc8b0;
			}
			
			.user-active.active
			{
				background-color:#b4af9a;
				color:#cdc8b0;
			}
			
			.user-active-text
			{
				font-size:1.5vw;
				color:#b4af9a;
				font-family: 'VT323', monospace;
			}
			
			.user-active-text::after {
				content:"";
				position:absolute;
				background-color:#b4af9a;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:2px;
				width:100%;
				top:100%;
				left:0;
				opacity : 0;
			}
			
			.user-active-text::before {
				content:"";
				position:absolute;
				background-color:#b4af9a;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:2px;
				width:100%;
				bottom:100%;
				left:0;
				opacity : 0;
			}
			
			.user-active:hover .user-active-text, .user-active.active .user-active-text
			{
				color:#635f54;
			}
			
			.user-active.active .user-active-text::before
			{
				height : 2px;
				bottom : 103%;
				opacity : 0.75;
				background-color:#b4af9a;
			}
			
			.user-active.active:hover .user-active-text::before
			{
				height : 2px;
				bottom : 103%;
				opacity : 1;
				background-color:#b4af9a;
			}
			
			.user-active.active .user-active-text::after
			{
				height : 2px;
				top : 103%;
				opacity : 0.75;
				background-color:#b4af9a;
			}
			
			.user-active.active:hover .user-active-text::after
			{
				height : 2px;
				top : 103%;
				opacity : 1;
				background-color:#b4af9a;
			}
			
			.user-active-tag
			{
				position:absolute;
				top:0px;
				right:0px;
				padding-left:0.5vw;
				width:3vw;
				background-color:#635f54;
				color:#b4af9a;
				font-size:1.5vw;

				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-group-methods-container
			{
				padding-bottom:0.5vw;
			}
			
			.tutor-qa-input-group-name-container
			{
				margin:0.5vw;
				margin-top:0;
				height:3vw;
			}
			
			.tutor-qa-input-group-name
			{
				width:100%;
				font-size:1.5vw;
				background-color:#b4af9a;
				border:none;
				border-left:0.5vw solid;
				border-color:#635f54;
				padding-left:0.5vw;
				color:#635f54;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-group-buttons-container
			{
				margin-left:0.5vw;
				margin-right:0.5vw;
				margin-top:0;
				height:3vw;
			}
			
			.tutor-qa-center-container
			{
				margin-left: 30vw;
				top: 6.5vw;
				width: 65vw;
				height: auto;
			}
			
			.question-composer-container
			{
				position:relative;
				background-color:#DAD4BB;
				padding-top:3vw;
			}
			
			.question-composer-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.question-composer-input-container
			{
				font-size:1.5vw;
				margin-left:1.5vw;
				margin-top:1.5vw;
				margin-right:1.5vw;
			}
			
			.question-composer-input
			{
				width:100%;
				background-color:#b4af9a;
				border:none;
				border-left:0.5vw solid;
				border-color:#635f54;
				padding-left:0.5vw;
				color:#635f54;
				resize:vertical;
				font-family: 'VT323', monospace;
			}
			
			.question-composer-groups-list
			{
				height: 4vw;
				margin-left:1.5vw;
				margin-right:1.5vw;
				margin-top:1vw;
				overflow: hidden;
			}
			
			.question-composer-groups-container
			{
				height: 3vw;
				width: 1000vw;
			}
			
			.question-composer-button-container
			{
				height:4.5vw;
				margin:1.5vw;
			}
				
			.tutor-qa-answers-received
			{
				position:relative;
				background-color:#DAD4BB;
				margin-top:1.5vw;
				padding-top:3vw;
			}
			
			.tutor-qa-answers-received-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-grade-question-container, .student-qa-answer-question-container
			{
				position: absolute;
				right: 0;
				top: 0;
				height: 3vw;
			}
			
			.tutor-qa-answers-received-question-container, .student-qa-question-received-description-container
			{
				margin:1.5vw;
			}
			
			.tutor-qa-answers-received-question, .student-qa-question-received-description
			{
				font-size:2vw;
				color:#635f54;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-answers-received-divider, .student-qa-question-received-divider
			{
				height:0.5vw;
				margin:1.5vw;
				width:calc(100% - 3vw);
				background-color:#b4af9a;
			}
			
			.tutor-qa-received-answer-container, .student-qa-graded-answer-container
			{
				position:relative;
				padding-top:4.5vw;
			}
			
			.tutor-qa-received-answer-header, .student-qa-graded-answer-header
			{
				position:absolute;
				margin-right:1.5vw;
				margin-left:1.5vw;
				margin-bottom:1.5vw;
				width:calc(100% - 3vw);
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#635f54;
				background-color:#b4af9a;
				padding-left:1.5vw;
				padding-right:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-received-answer-status, .student-qa-graded-answer-status
			{
				position:absolute;
				top:0px;
				right:1.5vw;
				padding-left:0.5vw;
				font-size:2vw;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-received-answer-body, .student-qa-graded-answer-body
			{
				margin-right:1.5vw;
				margin-left:1.5vw;
				margin-bottom:1.5vw;
				height:11.5vw;
				width:calc(100% - 3vw);
				position:relative;
			}
			
			.tutor-qa-received-answer-description, .student-qa-graded-answer-description
			{
				height: 10vw;
				width: 50%;
				overflow-y: auto;
				background-color: #b4af9a;
				color:#dad4bb;
				font-size:1.5vw;
				padding:0.5vw;
				position:absolute;
				top:0;
				left:0;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-explanation-container, .student-qa-explanation-container
			{
				position:absolute;
				top:0;
				right:0;
				margin-left: 1.5vw;
				width: calc(50% - 2vw);
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-explanation, .student-qa-explanation
			{
				height:7vw;
			}
			
			.tutor-qa-explanation-input, .student-qa-explanation-input
			{
				resize:none;
				width:100%;
				height:100%;
				overflow:auto;
				font-size:1.5vw;
				background-color: #b4af9a;
				padding-left: 0.5vw;
				color: #635f54;
				
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
			}
			
			.tutor-qa-grade-container, .student-qa-grade-container
			{
				height:3vw;
				font-size:1.5vw;
			}
			
			.grading-button
			{
				display:inline-block;
				color:#dad4bb;
				float:left;
				width: 25%;
				height: 3vw;
				text-align:center;
				cursor:pointer;
				font-size: 2vw;
				padding: 0;
				border:none;
				vertical-align:baseline;
			}
			
			.tutor-qa-prompt-window
			{
				z-index : 99;
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
			}
			
			.tutor-qa-prompt-overlay
			{
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
				background : rgba(0,0,0,.7);
				background-color : rgba(0,0,0,.7);
			}
			
			.tutor-qa-prompt-container
			{
				position:fixed;
				width:40vw;
				height:auto;
				background-color:#DAD4BB;
				left:30vw;
				top:calc(50% - 10vw);
			}
			
			.tutor-qa-prompt-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				padding-right:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-prompt-text
			{
				font-size:1.5vw;
				color:#635f54;
				padding-top:4.5vw;
				padding-left:1.5vw;
				padding-right:1.5vw;
				font-family: 'VT323', monospace;
			}
			
			.tutor-qa-options-container
			{
				height:3vw;
				margin-top:1.5vw;
			}
			
			.student-qa-left-container
			{
				left:3.5vw;
				top:6.5vw;
				width:20vw;
				height:auto;
				position:fixed;
			}
			
			.student-qa-center-container
			{
				margin-left: 25vw;
				top: 6.5vw;
				width: 50vw;
				height: auto;
			}
			
			.combat-log-header-container
			{
				position:relative;
				height:4vw;
			}
			
			.combat-log-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				color:#635f54;
				font-size:3vw;
				text-shadow: 0.35vw 0.35vw #9a9784;
				text-align:left;
			}
			
			.student-qa-question-received-container
			{
				position:relative;
				background-color:#DAD4BB;
				margin-top:1.5vw;
				padding-top:3vw;
			}
			
			.student-qa-question-received-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.student-qa-question-received-answers-container
			{
				position:relative;
				padding-top:3vw;
			}
			
			.student-qa-question-received-answer-header
			{
				position:absolute;
				margin-right:1.5vw;
				margin-left:1.5vw;
				margin-bottom:1.5vw;
				width:calc(100% - 3vw);
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#635f54;
				background-color:#b4af9a;
				padding-left:1.5vw;
				padding-right:1.5vw;
				text-align:left;
				font-family: 'VT323', monospace;
			}
			
			.student-qa-question-received-vote-count
			{
				position:absolute;
				top:0px;
				right:1.5vw;
				padding-left:0.5vw;
				font-size:2vw;
				font-family: 'VT323', monospace;
			}
			
			.student-qa-question-received-answer
			{
				font-size:1.5vw;
				margin-left:1.5vw;
				margin-top:1.5vw;
				margin-right:1.5vw;
				padding-bottom:1.5vw;
			}
			
			.student-qa-question-received-answer-container
			{
				position:relative;
				width: calc(100% - 17vw);
				height:10vw;
				display:inline-block;
			}
			
			.student-qa-question-received-answer-input
			{
				width: 100%;
				height:10vw;
				resize:none;
				background-color: #b4af9a;
				padding-left: 0.5vw;
				color: #635f54;
				border:none;
				border-left: 0.5vw solid #635f54;
				font-family: 'VT323', monospace;
			}
			
			.student-qa-question-received-avatar-container
			{
				background-color: #b4af9a;
				width: 15vw;
				height: 10vw;
				margin-left:1.5vw;
				display:inline-block;
				position:relative;
				border-color: #635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
			}
			
			.student-qa-question-received-avatar
			{
				width : 10vw;
				height : 100%;
				margin-left : calc(50% - 5vw);
				background-repeat: no-repeat;
				background-size: cover;
			}
			
			.student-qa-question-received-vote-container
			{
				position:absolute;
				right:0;
				bottom:0;
			}
			
			.student-qa-question-received-status
			{
				font-size:2vw;
				color:#635f54;
				margin-left:1.5vw;
				padding-bottom:1.5vw;
				font-family: 'VT323', monospace;
			}
			
			.student-qa-right-container
			{
				position:fixed;
				left:76.5vw;
				top:6.5vw;
				width:20vw;
				height:auto;
			}
			
			.student-qa-student-details-container
			{
				background-color:#DAD4BB;
				position:relative;
				padding-top:4.5vw;
				padding-bottom:1.5vw;
				box-shadow:0.7vw 0.7vw #9a9784;
				font-family: 'VT323', monospace;
				text-align:center;
			}
			
			.student-qa-student-name-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				text-align:left;
			}
			
			.student-qa-student-avatar-container
			{
				background-color: #b4af9a;
				width: calc(100% - 3vw);
				height: 10vw;
				margin-left:1.5vw;
				margin-right:1.5vw;
			}
			
			.student-qa-student-avatar
			{
				width : 10vw;
				height : 10vw;
				margin-left : calc(50% - 5vw);
				background-repeat: no-repeat;
				background-size: cover;
			}
			
			.student-qa-experience-container
			{
				width: calc(100% - 3vw);
				margin-left:1.5vw;
				margin-right:1.5vw;
				height : 2vw;
				position:relative;
				background-color:#b4af9a;
				text-align:center;
			}
			
			.student-qa-level
			{
				position:absolute;
				right:0;
				bottom:100%;
				font-size:1.5vw;
				background-color:#635f54;
				color:#dad4bb;
				padding:0.5vw;
			}
			
			.student-qa-experience
			{
				position:absolute;
				left:50%;
				margin-left:-25%;
				font-size:1.5vw;
				color:#635f54;
			}
			
			/*  Overdrive Mode Style */

			.rune
			{
				-webkit-transition: all 0.5s ease-out;
				-moz-transition: all 0.5s ease-out;
				-ms-transition: all 0.5s ease-out;
				-o-transition: all 0.5s ease-out;
				transition: all 0.5s ease-out;
				
				-webkit-animation: expand 0.2s ease-out;
				-moz-animation: expand 0.2s ease-out;
				-ms-animation: expand 0.2s ease-out;
				-o-animation: expand 0.2s ease-out;
				animation: expand 0.2s ease-out;
				
				opacity : 1;
				transform: scale(1);
				
				transform-origin : center;
			}
			.rune.completed-rune
			{
				opacity : 0;
				transform : scale(3);
			}
			
			.rune-symbol
			{
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				-webkit-animation: expand 0.2s ease-out;
				-moz-animation: expand 0.2s ease-out;
				-ms-animation: expand 0.2s ease-out;
				-o-animation: expand 0.2s ease-out;
				animation: expand 0.2s ease-out;
				
				opacity : 1;
				transform : scale(1);
				transform-origin : center;
			}
			.rune-symbol.completed-symbol
			{
				opacity : 0;
				transform : scale(3);
			}
			
			@keyframes expand
			{
				from { transform: scale(0); opacity : 0; }
				to { transform: scale(1); opacity : 1; }
			}
			
			@keyframes pulse
			{
				0% { transform: scale(0); opacity : 0; }
				75% { transform: scale (1); opacity : 1; }
				100% { transform: scale(1); opacity : 0; }
			}
			
			.firedFromTutor
			{
				opacity : 1 !important;
				transform : scale(1) !important;
				left : 90% !important;
			}
			
			.firedFromStudent
			{
				opacity : 1 !important;
				transform : scale(1) !important;
				left : 10% !important;
			}
			
			.firedFromTutorEnd
			{
				opacity : 0 !important;
				transform : scale(1.3) !important;
				left : 90% !important;
			}
			
			.firedFromStudentEnd
			{
				opacity : 0 !important;
				transform : scale(1.3) !important;
				left : 10% !important;
			}
			
			.battle-window
			{
				z-index : 99;
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
			}
			
			.overlay-screen
			{
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
				background-image: url("/images/bg.png");
				background-repeat: no-repeat;
				background-attachment: fixed;
				background-position: center; 
				background-size: cover;
				opacity:0.9;
			}
			
			.student-group
			{
				position:fixed;
			}
			
			.student-group-avatar
			{
				position : absolute;
				background-repeat : no-repeat;
				background-size:cover;		
				image-rendering:pixelated;
			}
			
			.battle-group-container
			{
				height: 3vw;
				font-size: 2vw;
				background-color: #b4af9a;
				position: absolute;
				right: -7vw;
				top: 6vw;
				z-index : 101;
				font-family: 'VT323', monospace;
			}
			
			.battle-group-icon
			{
				width : 2vw;
				height : 2vw;
				margin : 0.5vw;
				float : left;
				background-color:red;
			}
			
			.battle-group-name
			{
				height: 100%;
				width:calc(100% - 3.5)vw;
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
				font-size:2vw;
				color:#635f54;
			}
			
			.battle-group-identifier-tag
			{
				width: 5vw;
				height: 3vw;
				font-size: 2vw;
				position: absolute;
				text-align: center;
				color: #dad4bb;
				background-color: #635f54;
				right:0;
				top:0;
			}
			
			.battle-group-selected-tag
			{
				width : 0vw;
				height : 0vw;
				position : absolute;
				left : -3vw;
				opacity : 0;
				background-color:#635f54;
				
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
			}
			
			.battle-group-selected-tag::before {
				content:"";
				position:absolute;
				background-color:#635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:0.5vw;
				width:100%;
				top:100%;
				left:0;
				opacity : 0;
			}
			
			.battle-group-selected-tag::after {
				content:"";
				position:absolute;
				background-color:#635f54;
				-webkit-transition: all 0.2s ease-out;
				-moz-transition: all 0.2s ease-out;
				-ms-transition: all 0.2s ease-out;
				-o-transition: all 0.2s ease-out;
				transition: all 0.2s ease-out;
				
				height:0.5vw;
				width:100%;
				bottom:100%;
				left:0;
				opacity : 0;
			}
			
			.battle-group-container.selected .battle-group-selected-tag::after
			{
				height : 2px;
				bottom: 110%;
				opacity : 1;
			}
			
			.battle-group-container.selected .battle-group-selected-tag::before
			{
				height : 2px;
				top:110%;
				opacity : 1;
			}
			
			.battle-group-container.selected .battle-group-selected-tag
			{
				opacity : 1;
				width : 3vw;
				height : 3vw;
				left : -4.5vw;
			}
			
			.battle-group-container.selected:hover .battle-group-selected-tag
			{
				opacity : 1;
				width : 3vw;
				height : 3vw;
				left : -4.5vw;
				top:0;
			}
			
			.battle-group-container:hover .battle-group-selected-tag
			{
				opacity: 1;
				width: 1.5vw;
				height: 1.5vw;
				left: -3vw;
				top: 0.75vw;
			}
			
			.tutor-group
			{
				bottom : 50%;
				position : fixed;
				left : 3vw;
				font-family: 'VT323', monospace;
			}
			
			.tutor-avatar
			{
				position : absolute;
				z-index : 100;
			}
			
			.tutor-battle-info-container
			{
				position : absolute;
				height : 7vw;
				left : 0;
				z-index : 100;
				background-color:#dad4bb;
			}
			
			.tutor-battle-info-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				z-index : 1;
			}
			
			.tutor-battle-info
			{
				position : absolute;
				width : 100%;
				height : 100%;
				overflow : hidden;
				font-family: 'VT323', monospace;
			}
			
			.tutor-battle-loot-details
			{
				width : 100%;
				height : 2vw;
				font-size : 1.5vw;
				margin-left : 1.5vw;
				margin-top : 3vw;
			}
			
			.tutor-battle-overdrive-bar
			{
				position: absolute;
				z-index : 100;
				width : 100%;
				height : 2vw;
				bottom: 0;
			}
			
			.tutor-battle-overdrive-details
			{
				width: 100%;
				height: 2vw;
				font-size:1.5vw;
				color:#635f54;
				bottom: 0;
				position: absolute;
				z-index: 101;
				text-align: center;
			}
			
			.effect
			{
				transform : scale(0);
				opacity : 0;
				z-index : 0;
				position : fixed;
			}
			
			.tutor-battle-target-prompt
			{
				width:30vw;
				height:5vw;
				position:fixed;
				left:calc(50% - 15vw);
				top:calc(50% - 2.5vw);
				font-size:3vw;
				color:#635f54;
				font-family: 'VT323', monospace;
				text-align:center;
			}
			
			.timer-container
			{
				position : fixed;
				top : 0;
				left : 50%;
				width : 100%;
				height : 2vw;
				margin-left : -50%;
				z-index:99;
			}
			
			.battle-ranking-overlay
			{
				width:100%;
				height:100%;
				top:0;
				left:0;
				position:absolute;
				background-color:rgba(0,0,0,.7);
			}
			
			.battle-ranking-container
			{
				width : 70vw;
				height : 40vw;
				top : calc(50% - 20vw);
				left : 15vw;
				position : fixed;
				background-color : #cdc8b0;
				padding:0;
				box-shadow:0.7vw 0.7vw #9a9784;
			}
			
			.battle-ranking-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				font-family: 'VT323', monospace;
			}
			
			.battle-ranking-details-container
			{
				position : absolute;
				width : 100%;
				height : 100%;
			}
			
			.battle-ranking-mvp-banner
			{
				position: absolute;
				width: 100%;
				height: 20vw;
				font-size: 15vw;
				color: #635f54;
				padding-left: 1.5vw;
				text-shadow: 0.7vw 0.7vw #9a9784;
				text-align: center;
				font-family: 'VT323', monospace;
				left: -100%;
				
				-webkit-animation: slide-inout 3s ease-in-out;
				-moz-animation: slide-inout 3s ease-in-out;
				-ms-animation: slide-inout 3s ease-in-out;
				-o-animation: slide-inout 3s ease-in-out;
				animation: slide-inout 3s ease-in-out;
			}
			
			@keyframes slide-inout
			{
				0% { left:-100%; }
				20% { left:0%; }
				80% { left:0% }
				100% { left:100% }
				
			}
			
			.battle-ranking-mvp-container
			{
				position: absolute;
				bottom : 18vw;
				font-family: 'VT323', monospace;
			}
			
			.battle-ranking-mvp-sprite
			{
				width : 24vw;
				height : 24vw;
				position: absolute;
				margin-left : -12vw;
				bottom : 0;
			}
			
			.battle-ranking-mvp-label-container
			{
				width : 100%;
				height : 100%;
				position : absolute;
				bottom : 0;
			}
			
			.battle-ranking-mvp-questions-answered
			{
				width : 100%;
				font-size : 8vw;
				line-height: 4vw;
				padding-top:3vw;
				text-align : center;
				color:#5bc0de;
			}
			
			.battle-ranking-mvp-questions-answered-label
			{
				width : 100%;
				height : 3vw;
				font-size : 2vw;
				text-align : center;
				color:#5bc0de;
			}
			
			.battle-ranking-mvp-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				bottom:0;
				font-size:2vw;
				color:#635f54;
				background-color:#b4af9a;
			}
			
			.battle-ranking-mvp-icon
			{
				width : 2vw;
				height : 2vw;
				margin : 0.5vw;
				float : left;
			}
			
			.battle-ranking-mvp-username
			{
				height: 100%;
				width: calc(100% - 3.5vw);
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
			}
			
			.battle-ranking-mvp-identifier-tag
			{
				width: 5vw;
				height: 3vw;
				font-size: 2vw;
				position: absolute;
				text-align: center;
				color: #dad4bb;
				background-color: #635f54;
				right:0;
				top:-3vw;
			}
			
			.battle-ranking-rewards-container
			{
				width : 25vw;
				height : 15vw;
				position : absolute;
				bottom : 1.5vw;
				left : 1.5vw;
				background-color:#dad4bb;
				font-family: 'VT323', monospace;
			}
			
			.battle-ranking-rewards-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#b4af9a;
				padding-left:1.5vw;
				z-index : 1;
			}
			
			.battle-ranking-rewards
			{
				position : absolute;
				width : 100%;
				height : 100%;
				overflow : hidden;
			}
			
			.battle-ranking-rewards-overdrive
			{
				width : 100%;
				height : 3vw;
				font-size : 2vw;
				margin-left : 1.5vw;
				margin-top : 3vw;
				color:#b4af9a;
			}
			
			.battle-ranking-rewards-loot
			{
				width : 100%;
				height : 3vw;
				font-size : 2vw;
				margin-left : 1.5vw;
				color:#b4af9a;
			}
			
			.battle-ranking-tier-container
			{
				width : 14vw;
				height : 15vw;
				position : absolute;
				bottom : 1.5vw;
				left : 28vw;
				background-color:#dad4bb;
				box-shadow:0.7vw 0.7vw #9a9784;
			}
			
			.battle-ranking-tier
			{
				position : absolute;
				width : 100%;
				height : 5vw;
				font-size : 5vw;
				font-weight:bold;
				color:#635f54;
				text-align : center;
				text-transform:uppercase;
				font-family: 'VT323', monospace;
			}
			
			.battle-ranking-members-container
			{
				width : 25vw;
				height : 15vw;
				position : absolute;
				bottom : 1.5vw;
				right : 1.5vw;
				overflow-y : scroll;
			}
			
			.battle-ranking-member
			{
				width : calc(100% - 2.5vw);
				height : 3vw;
				font-size : 2vw;
				margin-bottom : 1.5vw;
				margin-left : 1.5vw;
				background-color:#b4af9a;
				color:#dad4bb;
				position:relative;
				font-family: 'VT323', monospace;
			}
			
			.battle-ranking-member-rank
			{
				width : 2vw;
				height : 2vw;
				margin : 0.5vw;
				float : left;
			}
			
			.battle-ranking-member-name
			{
				height: 100%;
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
			}
			
			.battle-ranking-member-identifier-tag
			{
				width: 5vw;
				height: 3vw;
				font-size: 2vw;
				position: absolute;
				text-align: center;
				color: #dad4bb;
				background-color: #635f54;
				right:0;
				top:0;
			}
			
			.battle-ranking-timer-container
			{
				position: absolute;
				top: -1.5vw;
				left: 50%;
				width: 100%;
				height: 1.5vw;
				margin-left: -50%;
				z-index:-1;
			}
			
			.battle-start-splash-overlay
			{
				width:100%;
				height:100%;
				top:0;
				left:0;
				position:absolute;
			}
			
			.battle-start-splash-background
			{
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
				background : rgba(0,0,0,1);
				background-color : rgba(0,0,0,1);
			}
			
			.battle-start-splash-text
			{
				font-size: 20vw;
				color: white;
				position: fixed;
				width: 100%;
				height: auto;
				margin-left: -50%;
				margin-top: -20%;
				text-align: center;
				top: 50%;
				left: 50%;
				text-shadow: 0.7vw 0.7vw gray;
				font-family: 'VT323', monospace;
			}
			
			.battle-loot-overlay
			{
				width:100%;
				height:100%;
				top:0;
				left:0;
				position:absolute;
				background-color:rgba(0,0,0,.7);
			}
			
			.battle-loot-container
			{
				width: 35vw;
				height: 30vw;
				top: calc(50% - 15vw);
				left: 12.5vw;
				position: fixed;
				padding-top : 3vw;
				background-color: #DAD4BB;
				font-family: 'VT323', monospace;
			}
			
			.battle-loot-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				top:0;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				z-index : 1;
			}
			
			.battle-loot-list
			{
				width : 100%;
				height : calc(100% - 6vw);
				position : absolute;
				padding-top : 1.5vw;
				overflow-y : scroll;
			}
			
			.battle-loot-item-container
			{
				width : calc(100% - 2.5vw);
				height : 3vw;
				font-size : 2vw;
				margin-bottom : 1.5vw;
				margin-left : 1.5vw;
				padding-left: 1.5vw;
				position:relative;
				cursor:pointer;
				font-family: 'VT323', monospace;
				background-color:none;
				color:#635f54;
				
				-webkit-transition: all 0.5s ease-out;
				-moz-transition: all 0.5s ease-out;
				-ms-transition: all 0.5s ease-out;
				-o-transition: all 0.5s ease-out;
				transition: all 0.5s ease-out;
			}
			
			.battle-loot-item-container.active
			{
				background-color:#635f54;
				color:#dad4bb;
			}
			
			.battle-loot-item-pointer
			{
				width : 0;
				height : 0;
				position : absolute;
				right : 0.5vw;
				top : 0.5vw;
				background-color : #dad4bb;
				
				-webkit-transition: all 0.5s ease-out;
				-moz-transition: all 0.5s ease-out;
				-ms-transition: all 0.5s ease-out;
				-o-transition: all 0.5s ease-out;
				transition: all 0.5s ease-out;
			}
			
			.battle-loot-item-container.active .battle-loot-item-pointer
			{
				width : 2vw;
				height : 2vw;
			}
			
			.battle-loot-item-name
			{
				width: 100%;
				height: 100%;
				text-overflow: ellipsis;
				overflow: hidden;
				white-space: nowrap;
			}
			
			.battle-loot-info-container
			{
				width: 35vw;
				height: 30vw;
				top: calc(50% - 15vw);
				left: 52.5vw;
				position: fixed;
				background-color: #DAD4BB;
				font-family: 'VT323', monospace;
			}
			
			.battle-loot-empty-header
			{
				position:absolute;
				width:100%;
				height:10vw;
				top:50%;
				left:0;
				font-size:8vw;
				color:#635f54;
				margin-top:-5vw;
				text-align:center;
				z-index : 1;
			}
			
			.battle-loot-info-header
			{
				position:absolute;
				width:100%;
				height:3vw;
				left:0px;
				font-size:2vw;
				color:#dad4bb;
				background-color:#635f54;
				padding-left:1.5vw;
				z-index : 1;
			}
			
			.battle-loot-image-container
			{
				background-color: #b4af9a;
				width: 32vw;
				height: 10vw;
				top: 4.5vw;
				left: 1.5vw;
				position: absolute;
			}
			
			.battle-loot-image
			{
				width : 10vw;
				height : 10vw;
				margin-left : 11vw;
				background-repeat : no-repeat;
				background-size: cover;
			}
			
			.battle-loot-details-container
			{
				position: absolute;
				width: calc(100% - 3vw);
				height: 12.5vw;
				overflow: hidden;
				top: 16vw;
				left: 1.5vw;
				color:#635f54;
			}
			
			.battle-loot-details
			{
				width: 100%;
				height: 3vw;
				font-size: 2vw;
			}
			
			.battle-loot-details-long
			{
				width: 100%;
				height: 6vw;
				font-size: 1.5vw;
			}
			
			.battle-end-splash-overlay
			{
				width : 100%;
				height : 100%;
				top : 0;
				left : 0;
				position : fixed;
				background : rgba(0,0,0,1);
				background-color : rgba(0,0,0,1);
			}
			
			.battle-end-splash-text
			{
				font-size: 20vw;
				color: white;
				position: fixed;
				width: 100%;
				height: auto;
				margin-left: -50%;
				margin-top: -20%;
				text-align: center;
				top: 50%;
				left: 50%;
				text-shadow: 0.7vw 0.7vw gray;
				font-family: 'VT323', monospace;
			}
		</style>
    </head>

    <body ng-app="lobbyApp">
		
		<ul id="header"> <!-- Header -->
			<li class="header"
			style="
				margin-right:3.5vw;
			">
				<div class="link-flourish">
				</div>
				<a class="font" href="/">Index</a>
			</li>
		
			<li class="header">
				<div class="link-flourish">
				</div>
				<a class="font" href="/dashboard">Dashboard</a>
			</li>
			
			<div class="header-flourish">
			</div>
		</ul>
	
		<div class="header-padding"
		style="
			width:100%;
			height:6.8vw;
		"></div>
		
		<div ng-controller="socketCtrl" class="container" id="header-bar"> <!-- Title Box -->
			<!--<div class="row">
				<div class="text-center col-md-12 col-sm-12 col-xs-12">
					<h1 class="font whiteFont centerText boldText lobbyBottomFiller">Welcome to <%= moduleId %> <%= tutorialId %>'s Lobby!</h1>
				</div>
			</div>-->
		</div>
		
		<!-- Student Battle Overlay -->
		<div ng-controller="studentBattleCtrl">
			<div id="student-battle-window" class="battle-window"
			ng-if="showBattleWindow == true  && socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'student'">
				<!-- Background screen -->
				<div class="overlay-screen">
				</div>
				
				<!-- Avatars of students -->
				<div class="student-group"
				ng-repeat="group in groups"
				id="group-{{group.groupName}}"
				ng-style="{'right' : group.positionRight + 'vw', 'bottom' : group.positionBottom + '%'}">
					<div class="student-group-avatar"
					id="student-{{student.userId}}"
					ng-repeat="student in group.members"
					style="
						width: {{student.userAvatar.width}}vw;
						height: {{student.userAvatar.height}}vw;
						bottom: {{student.displacementBottom}}vw;
						right: {{student.displacementRight * $index}}vw;
						margin-right: {{student.userAvatar.width * -0.5}}vw;
						margin-bottom: {{student.userAvatar.height * -0.5}}vw;
						z-index : {{100 - $index}};
						background-image : url('{{student.currentAnim}}');
						-webkit-filter:brightness({{ student.userId == userId ? 100 : 70}}%);
						filter:brightness({{ student.userId == userId ? 100 : 70}}%);
					">
					</div>
					
					<!-- Group marker for the battle to identify clusters of student avatars -->
					<div class="battle-group-container"
					style="
					width: {{tutorAvatar.width}}vw;
					">
						<div class="battle-group-icon smoothImage"
						style="
							-webkit-filter : hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
							filter :  hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
						">
						</div>
						<div class="battle-group-name"
						style="
							width: calc(100% - {{group.groupName == groupName ? 8.5 : 3.5}}vw);
						">
							{{group.groupName}}
						</div>
						
						<!-- Mark groups that the player belongs to -->
						<div class="battle-group-identifier-tag"
							ng-show="group.groupName == groupName">
								You
						</div>
					</div>
				</div>
				
				<!-- Avatar of tutor -->
				<div class="tutor-group"
					id="tutor-group">
					<div class="tutor-avatar"
						ng-style="{'width' : tutorAvatar.width + 'vw', 'height' : tutorAvatar.height + 'vw',
								'margin-top' : tutorAvatar.height * -0.5 + 'vw', 'background' : 'url(' + tutorAvatar.currentAnim + ') no-repeat', 'background-size' : 'cover'}">
					</div>
					
					<div class="tutor-battle-info-container"
					style="
						width : {{tutorAvatar.width}}vw;
						bottom : {{tutorAvatar.height * -0.5}}vw;
					">
						<div class="tutor-battle-info-header">
							{{tutorAvatar.username}}
						</div>
						<div class="tutor-battle-info">
							<div class="tutor-battle-loot-details">
								Bonus Loot: +{{totalDeath}}
							</div>
						</div>
						<div class="tutor-battle-overdrive-bar">
							<div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="{{health/maxHealth * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{health/maxHealth * 100}}%">
							</div>
						</div>
						<div class="tutor-battle-overdrive-details">
								Health: {{health}} / {{maxHealth}}
						</div>
					</div>
				</div>
				
				<!-- Effects for attacks -->
				<div class="effect {{effect.animation}}"
				ng-repeat="effect in effects"
				style="
				left : {{effect.positionLeft}}px;
				top : {{effect.positionTop}}px;
				width : {{effect.width}}vw;
				height : {{effect.height}}vw;
				margin-left : {{effect.marginLeft}}vw;
				margin-top : {{effect.marginTop}}vw;
				background : url({{effect.image}});
				-webkit-transition: left {{effect.duration}}s ease-in, opacity 0.2s ease-out, transform 0.2s ease-out;
				-moz-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				-ms-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				-o-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				">
				</div>
				
				<!-- Runes -->
				<div class="rune"
					ng-repeat="rune in runes"
					ng-class="{'completed-rune' : rune.completed, 'incomplete-rune' : !rune.completed}"
					style="
						width : {{rune.width}}vw;
						height: {{rune.height}}vw;
						bottom: {{rune.positionBottom}}%;						
						right: {{rune.positionRight}}%;
						
						margin-bottom : {{rune.height * -0.5}}vw;
						margin-right : {{rune.width * -0.5}}vw;
						
						position : fixed;
						background : #DAD4BB;
					">
					<div class="rune-symbol"
						ng-repeat="symbol in rune.symbols"
						ng-class="{'completed-symbol' : symbol.completed, 'incomplete-symbol' : !symbol.completed}"
						ng-style="{'width' : symbol.width + 'vw', 'height' : symbol.height + 'vw',
								'top' : symbol.positionTop + '%', 'left' : symbol.positionLeft + '%',
								'margin-left' : symbol.width * -0.5 + 'vw', 'margin-top' : symbol.height * -0.5 + 'vw'}"
						style="
							position : absolute;
							background : red;
							z-index : 100;
						"
						ng-mouseover="markSymbol ($parent.$index, $index)"
						ng-click="markSymbol ($parent.$index, $index)">
					</div>
				</div>
				
				<!-- Battle timer -->
				<div class="timer-container">
					<div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="{{currentTime/battleDuration * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{currentTime/battleDuration * 100}}%">
					</div>
				</div>
				
				<!-- Splash screen -->
				<div ng-show="showSplash == true" id="battle-ranking-overlay" class="battle-ranking-overlay">
					<div class="battle-ranking-container" id="battle-ranking-container"
					ng-repeat="group in rankedGroups">
						<div class="battle-ranking-header">
							{{group.groupName}}
							<!--<div class="group-color-tag"
							style="
								width: 10vw;
								height: 3vw;
								font-size: 2vw;
								position: absolute;
								text-align: center;
								color: white;
								background-color: red;
								-webkit-filter : hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
								filter :  hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
								right:0;
								top:0;
							">
							</div>-->
						</div>
						<div class="battle-ranking-details-container">
							<div class="battle-ranking-mvp-banner">
								MVPs
							</div>
							
							<div class="battle-ranking-mvp-container"
							ng-repeat="member in group.topMembers"
							style="
								width : {{member.size}}vw;
								height : {{member.size}}vw;
								margin-left: {{member.size * -0.5}}vw;
								left : {{member.positionLeft}}%;
							">
								<div class="battle-ranking-mvp-sprite smoothImage"
								ng-style="{'background' : 'url(' + member.userAvatar.idleAnim + ') no-repeat', 'background-size' : 'cover'}"
								style="
									left : {{member.size * 0.5}}vw;
								">
								</div>
								<div class="battle-ranking-mvp-label-container">
									<div class="battle-ranking-mvp-questions-answered">
										{{member.answersSubmitted}}
									</div>
									
									<div class="battle-ranking-mvp-questions-answered-label">
										Questions answered
									</div>
									
									<div class="battle-ranking-mvp-header">
										<div class="battle-ranking-mvp-icon smoothImage"
										ng-style="{'background' : 'url(' + member.rankIcon + ') no-repeat', 'background-size' : 'cover'}">
										</div>
										
										<div class="battle-ranking-mvp-username">
											{{member.username}}
										</div>
										<div class="battle-ranking-mvp-identifier-tag"
										ng-show="member.userId == userId">
											You
										</div>
									</div>
								</div>
							</div>
							
							<div class="battle-ranking-rewards-container">
								<div class="battle-ranking-rewards-header">
									Rewards
								</div>
								<div class="battle-ranking-rewards">
									<div class="battle-ranking-rewards-overdrive">
										Overdrive Time: +{{group.overdriveDuration/1000.0}}s
									</div>
									<div class="battle-ranking-rewards-loot"
									ng-if="groupName == group.groupName">
										Bonus Loot: +{{bonusLootAmount}}
									</div>
								</div>
							</div>
							
							<div class="battle-ranking-tier-container">
								<div class="battle-ranking-tier">
									{{group.ranking}}
								</div>
							</div>

							<div class="battle-ranking-members-container">
								<div class="battle-ranking-member"
								ng-repeat="member in group.allMembers">
									<div class="battle-ranking-member-rank smoothImage"
									ng-style="{'background' : 'url(' + member.rankIcon + ') no-repeat', 'background-size' : 'cover'}">
									</div>
									<div class="battle-ranking-member-name"
									style="
										width: calc(100% - {{member.userId == userId ? 8.5 : 3.5}}vw);
									">
										{{member.username}}
									</div>
									<div class="battle-ranking-member-identifier-tag"
									ng-show="member.userId == userId">
										You
									</div>
								</div>
							</div>
						</div>
						<div class="battle-ranking-timer-container">
							<div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="{{group.currentTime/group.totalDisplayTime * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{group.currentTime/group.totalDisplayTime * 100}}%">
							</div>
						</div>
					</div>
				</div>
				
				<!-- Start splash screen -->
				<div ng-if="showStartSplash == true" id="battle-start-splash-overlay" class="battle-start-splash-overlay">
					<!-- Background screen -->
					<div
					class="battle-start-splash-background"
					ng-class="{'show' : showStartSplash == true, 'hide' : showStartSplash == false}">
						<div class="battle-start-splash-text">
						OVERDRIVE
						</div>
					</div>
				</div>	
				
				<!-- End Splash screen -->
				<div ng-show="showEndSplash == true" id="battle-loot-overlay" class="battle-loot-overlay">
					<div class="battle-loot-container" id="battle-loot-container">
						<div class="battle-loot-header">
							Loot
						</div>
						<div class="battle-loot-list">
							<div class="battle-loot-item-container"
							ng-class="{'active' : selectedLootIndex == $index}"
							ng-repeat="lootItem in loot"
							ng-click="selectLoot ($index);"
							ng-mouseover="selectLoot ($index);">
								<div class="battle-loot-item-pointer">
								</div>
								<div class="battle-loot-item-name">
									{{lootItem.name}}
								</div>
							</div>
						</div>
						<div class="default-style-button"
						ng-click="claimLoot()"
						style="
						position: absolute;
						bottom: 0;
						right: 0;
						width:8vw;
						">
							Claim
						</div>
					</div>
					
					<div class="battle-loot-info-container" id="battle-loot-info-container">
						<div ng-show="loot.length == 0 || selectedLootIndex >= loot.length || selectedLootIndex < 0">
							<div class="battle-loot-empty-header">
								EMPTY
							</div>
						</div>
						<div ng-show="loot.length > 0 && selectedLootIndex >= 0 && selectedLootIndex < loot.length">
							<div class="battle-loot-info-header">
								{{loot[selectedLootIndex].name}}
							</div>
							<div class="battle-loot-image-container">
								<div class="battle-loot-image smoothImage"
								style="
									background-image : url({{selectedLootItem.icon}});
								">
								</div>
							</div>
							<div class="battle-loot-details-container">
								<div class="battle-loot-details">
									<div class="battle-loot-details-label"
									style="
									float : left;
									">
										Type:
									</div>
									<div class="battle-loot-details-content"
									style="
									float : right;
									">
										{{loot[selectedLootIndex].type}}
									</div>
								</div>
								<div class="battle-loot-details">
									<div class="battle-loot-details-label"
									style="
									float : left;
									">
										Value:
									</div>
									<div class="battle-loot-details-content"
									style="
									float : right;
									">
										+{{loot[selectedLootIndex].value}} exp
									</div>
								</div>
								<div class="battle-loot-details-long">
									{{loot[selectedLootIndex].flavour}}
								</div>
							</div>
						</div>
					</div>
					
					<!-- Background screen -->
					<div
					class="battle-end-splash-overlay"
					ng-show="showFinSplash == true"
					ng-class="{'show' : showFinSplash == true, 'hide' : showFinSplash == false}">
						<div class="battle-end-splash-text">
						FINISH
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- Tutor Battle Overlay -->
		<div ng-controller="tutorBattleCtrl" >
			<div ng-if="showBattleWindow == true && socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'tutor'" id="tutor-battle-window" class="battle-window">
				<!-- Background screen -->
				<div class="overlay-screen">
				</div>
				
				<!-- Avatars of students -->
				<div class="student-group"
				ng-repeat="group in groups"
				id="group-{{group.groupName}}"
				ng-style="{'right' : group.positionRight + 'vw', 'bottom' : group.positionBottom + '%'}"
				style="
					position : fixed;
				">
					<div class="student-group-avatar"
					id="student-{{student.userId}}"
					ng-repeat="student in group.members"
					style="
						width: {{student.userAvatar.width}}vw;
						height: {{student.userAvatar.height}}vw;
						bottom: {{student.displacementBottom}}vw;
						right: {{student.displacementRight * $index}}vw;
						margin-right: {{student.userAvatar.width * -0.5}}vw;
						margin-bottom: {{student.userAvatar.height * -0.5}}vw;
						background-image : url('{{student.currentAnim}}');
						z-index : {{100 - $index}};
					">
					</div>
					
					<!-- Group marker for the battle to identify clusters of student avatars -->
					<div class="battle-group-container"
					ng-class="{'selected' : selectedGroupIndex == $index}"
					ng-click="selectGroup ($index)"
					style="
					width: {{tutorAvatar.width}}vw;
					cursor:pointer;
					">
						<div class="battle-group-selected-tag">
						</div>
						
						<div class="battle-group-icon smoothImage"
						style="
							-webkit-filter : hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
							filter :  hue-rotate({{group.color}}deg) saturate({{group.saturation}}%);
						">
						</div>
						<div class="battle-group-name">
							{{group.groupName}}
						</div>
					</div>
				</div>
				
				<!-- Avatar of tutor -->
				<div class="tutor-group"
					id="tutor-group">
					<div class="tutor-avatar"
						ng-style="{'width' : tutorAvatar.width + 'vw', 'height' : tutorAvatar.height + 'vw',
								'margin-top' : tutorAvatar.height * -0.5 + 'vw', 'background' : 'url(' + tutorAvatar.currentAnim + ') no-repeat', 'background-size' : 'cover'}">
					</div>
					
					<div class="tutor-battle-info-container"
					style="
						width : {{tutorAvatar.width}}vw;
						bottom : {{tutorAvatar.height * -0.5}}vw;
					">
						<div class="tutor-battle-info-header">
							{{tutorAvatar.username}}
						</div>
						<div class="tutor-battle-info">
							<div class="tutor-battle-loot-details">
								Bonus Loot: +{{totalDeath}}
							</div>
						</div>
						<div class="tutor-battle-overdrive-bar">
							<div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="{{health/maxHealth * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{health/maxHealth * 100}}%">
							</div>
						</div>
						<div class="tutor-battle-overdrive-details">
								Health: {{health}} / {{maxHealth}}
						</div>
					</div>
				</div>
				
				<!-- Effects for attacks -->
				<div class="effect {{effect.animation}}"
				ng-repeat="effect in effects"
				style="
				left : {{effect.positionLeft}}px;
				top : {{effect.positionTop}}px;
				width : {{effect.width}}vw;
				height : {{effect.height}}vw;
				margin-left : {{effect.marginLeft}}vw;
				margin-top : {{effect.marginTop}}vw;
				background : url({{effect.image}});
				-webkit-transition: left {{effect.duration}}s ease-in, opacity 0.2s ease-out, transform 0.2s ease-out;
				-moz-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				-ms-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				-o-transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				transition: left {{effect.duration}}s ease-out, opacity 0.2s ease-out, transform 0.2s ease-out;
				">
				</div>
				
				<!-- Effects for attack damage
				<div class="effect"
					ng-repeat="effect in effects"
					ng-style="{'left' : effect.positionLeft + 'px', 'top' : effect.positionTop + 'px',
								'width' : effect.width + 'px', 'height' : effect.height + 'px',
								'margin-left' : effect.marginLeft + 'px', 'margin-top' : effect.height * -0.5 + 'px'}"
					style="
						position : fixed;
						background : url({{effect.image}});
					">
				</div> -->
				
				<div class="tutor-battle-target-prompt"
				ng-show="selectedGroupIndex == -1">
					Select a group from the left to target it!
				</div>
				
				<!-- Runes -->
				<div class="rune"
					ng-repeat="rune in runes"
					ng-class="{'completed-rune' : rune.completed, 'incomplete-rune' : !rune.completed}"
					style="
						width : {{rune.width}}vw;
						height: {{rune.height}}vw;
						bottom: {{rune.positionBottom}}%;						
						right: {{rune.positionRight}}%;
						
						margin-bottom : {{rune.height * -0.5}}vw;
						margin-right : {{rune.width * -0.5}}vw;
						
						position : fixed;
						background : #DAD4BB;
					">
					<div class="rune-symbol"
						ng-repeat="symbol in rune.symbols"
						ng-class="{'completed-symbol' : symbol.completed, 'incomplete-symbol' : !symbol.completed}"
						ng-style="{'width' : symbol.width + 'vw', 'height' : symbol.height + 'vw',
								'top' : symbol.positionTop + '%', 'left' : symbol.positionLeft + '%',
								'margin-left' : symbol.width * -0.5 + 'vw', 'margin-top' : symbol.height * -0.5 + 'vw'}"
						style="
							position : absolute;
							background : red;
							z-index : 100;
						"
						ng-mouseover="markSymbol ($parent.$index, $index)"
						ng-click="markSymbol ($parent.$index, $index)">
					</div>
				</div>
				
				<!-- Battle timer -->
				<div class="timer-container">
					<div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="{{currentTime/battleDuration * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{currentTime/battleDuration * 100}}%">
					</div>
				</div>
			
				<!-- Splash screen -->
				<div ng-show="showSplash == true" id="battle-ranking-overlay" class="battle-ranking-overlay">
					<!-- Container for the group ranking display -->
					<div class="battle-ranking-container" id="battle-ranking-container"
					ng-repeat="group in rankedGroups">
						<!-- Header for the display -->
						<div class="battle-ranking-header">
							{{group.groupName}}
						</div>
						
						<div class="battle-ranking-details-container">
							<div class="battle-ranking-mvp-banner">
								MVPs
							</div>
							
							<div class="battle-ranking-mvp-container"
							ng-repeat="member in group.topMembers"
							style="
								width : {{member.size}}vw;
								height : {{member.size}}vw;
								margin-left: {{member.size * -0.5}}vw;
								left : {{member.positionLeft}}%;
							">
								<div class="battle-ranking-mvp-sprite smoothImage"
								ng-style="{'background' : 'url(' + member.userAvatar.idleAnim + ') no-repeat', 'background-size' : 'cover'}"
								style="
									left : {{member.size * 0.5}}vw;
								">
								</div>
								<div class="battle-ranking-mvp-label-container">
									<div class="battle-ranking-mvp-questions-answered">
										{{member.answersSubmitted}}
									</div>
									
									<div class="battle-ranking-mvp-questions-answered-label">
										Questions answered
									</div>
									
									<div class="battle-ranking-mvp-header">
										<div class="battle-ranking-mvp-icon smoothImage"
										ng-style="{'background' : 'url(' + member.rankIcon + ') no-repeat', 'background-size' : 'cover'}">
										</div>
										
										<div class="battle-ranking-mvp-username">
											{{member.username}}
										</div>
									</div>
								</div>
							</div>
							
							<div class="battle-ranking-rewards-container">
								<div class="battle-ranking-rewards-header">
									Rewards
								</div>
								<div class="battle-ranking-rewards">
									<div class="battle-ranking-rewards-overdrive">
										Overdrive Time: +{{group.overdriveDuration/1000.0}}s
									</div>
								</div>
							</div>
							
							<div class="battle-ranking-tier-container">
								<div class="battle-ranking-tier">
									{{group.ranking}}
								</div>
							</div>

							<div class="battle-ranking-members-container">
								<div class="battle-ranking-member"
								ng-repeat="member in group.allMembers">
									<div class="battle-ranking-member-rank smoothImage"
									ng-style="{'background' : 'url(' + member.rankIcon + ') no-repeat', 'background-size' : 'cover'}">
									</div>
									<div class="battle-ranking-member-name"
									style="
										width: calc(100% - 3.5vw);
									">
										{{member.username}}
									</div>
								</div>
							</div>
						</div>
						<div class="battle-ranking-timer-container">
							<div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="{{group.currentTime/group.totalDisplayTime * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{group.currentTime/group.totalDisplayTime * 100}}%">
							</div>
						</div>
					</div>
				</div>
				
				<!-- Start splash screen -->
				<div ng-if="showStartSplash == true" id="battle-start-splash-overlay" class="battle-start-splash-overlay">
					<!-- Background screen -->
					<div
					class="battle-start-splash-background"
					ng-class="{'show' : showStartSplash == true, 'hide' : showStartSplash == false}">
						<div class="battle-start-splash-text">
						OVERDRIVE
						</div>
					</div>
				</div>
				
				<!-- End splash screen -->
				<div ng-if="showEndSplash == true" id="battle-loot-overlay" class="battle-loot-overlay">
					<!-- Background screen -->
					<div
					class="battle-end-splash-overlay"
					ng-class="{'show' : showEndSplash == true, 'hide' : showEndSplash == false}">
						<div class="battle-end-splash-text">
							FINISH
						</div>
					</div>
				</div>	
			</div>
		</div>
		
		<div class="container-fluid">
			<div class="row" id="battle-container">
				<!-- Tutor Q&A -->
				<div ng-controller="tutorCtrl">
					
					<div class="tutor-qa-left-container" ng-if="socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'tutor'">
						<div class="tutor-qa-tutor-details-container">
							<div class="tutor-qa-tutor-name-header">
								<%= username %>
							</div>
							
							<div class="tutor-qa-tutor-avatar-container">
								<div class="tutor-qa-tutor-avatar-icon"
								ng-style="{'background-image' : 'url(' + userInfo.icon + ')'}">
								</div>
							</div>
							
							<div class="tutor-qa-tutor-health-container">
								<div class="tutor-qa-tutor-health-text">
										Health: {{health}} / {{maxHealth}}
								</div>
								<div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="{{health/maxHealth * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{health/maxHealth * 100}}%">
								</div>
							</div>
						</div>
						<div class="active-users-container">
							<div class="active-users-header">
								Active Users
							</div>
							
							<div ng-controller="activeUsersCtrl">
								<div class="active-users-list-container" ng-if="socket.getConnectionState() == socket.CONNECTED()">
									<!-- List of Groups -->
									<div class="active-users-list">
										<div class="active-users-list-group-container">
											<div class="select-group"
											ng-class="{'selected' : selectedGroup == ($index + groupRangeIndex)}"
											ng-repeat="group in socket.getAllSocketGroups() | limitTo : 4 : groupRangeIndex"
											ng-click="setSelectedGroup($index + groupRangeIndex)">
												<button class="select-group-button font"
												style="
												width:5.6vw;
												">
													{{group}}
												</button>
											</div>
										</div>
									</div>
									<div class="scroll-bar-container">
										<div class="scroll-bar-text font">
											{{socket.getAllSocketGroups()[selectedGroup]}}
										</div>
										<div class="users-list-scroll-left"
										ng-click="scrollGroupList(-1)">
										</div>
										<div class="users-list-scroll-right"
										ng-click="scrollGroupList(1)">
										</div>
									</div>
									
									<!-- List and Toggle Tutees in Groups -->
									<div class="user-active-list-container">
										<div class="user-active-list">
											<div class="user-active"
											ng-repeat="user in users[socket.getAllSocketGroups()[selectedGroup]]"
											ng-class="{'active' : selectedUsers.indexOf (user.socketId) >= 0 }">
												<div class="user-active-text"
												ng-click="selectUser(user.socketId);">
													{{user.username}}
												</div>
												<div class="user-active-tag"
												ng-show="user.userId == userId">
													You
												</div>
											</div>
										</div>
									</div>
									
									<!-- Tutors will be able to Create and Delete Groups -->
									<div class="tutor-qa-group-methods-container" ng-if="socket.getUserType() == 'tutor'">
										<div class="tutor-qa-input-group-name-container">
			                            	<input class="tutor-qa-input-group-name"
											ng-model="$parent.$parent.newGroupName" placeholder="Enter a group name here..."/>
			                        	</div>

			                        	<div class="tutor-qa-group-buttons-container">
											<div>
												<button class="default-style-button" ng-click="createGroup()" ng-disabled="!isValidGroupParams()"
												style="
													float:right;
												">
													CREATE
												</button>
											</div>
			                            	<div ng-if="selectedGroup > 0">
			                            		<button class="default-style-button" ng-click="deleteGroup()"
												style="
													float:left;
												">
													DELETE
												</button>
			                            	</div>
			                        	</div>
			                        </div>
								
								</div>
							</div>
						</div>
					</div>
					
					<div class="tutor-qa-center-container" ng-if="socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'tutor'">
						<!-- Question composer -->
						<div class="question-composer-container">
							<div class="question-composer-header">
								Question Composer
							</div>
							
							<div class="question-composer-input-container">
								<textarea class="question-composer-input" ng-model="composerQuestion.description" placeholder="Type your question here..." type="text"  ng-trim="false"></textarea>
							</div>
							
							<!-- List of Groups -->
							<div class="question-composer-groups-list">
								<div class="question-composer-groups-container">
									<div class="select-group"
									ng-class="{'selected' : inSelectedGroups(($index + groupRangeIndex))}"
									ng-repeat="group in socket.getAllSocketGroups() | limitTo : ((groupRangeIndex + $index) > 0 ? 6 : 7) : groupRangeIndex"
									ng-if="(groupRangeIndex + $index) > 0"
									ng-click="toggleSelectedGroup($index + groupRangeIndex)"
									style="
										width:9.1vw;
										margin-right:1.5vw;
									">
										<button class="select-group-button font"
										style="
										width:9.1vw;
										">
											{{group}}
										</button>
									</div>
								</div>
							</div>
							<div class="scroll-bar-container"
							style="
							margin-left:1.5vw;
							margin-left:1.5vw;
							width:calc(100% - 3vw);
							">
								<div class="scroll-bar-text font">
									{{selectedGroups.length}} targets selected
								</div>
								<div class="users-list-scroll-left"
								ng-click="scrollGroupList(-1)">
								</div>
								<div class="users-list-scroll-right"
								ng-click="scrollGroupList(1)">
								</div>
							</div>
							<div class="question-composer-button-container">
								<button class="default-style-button" ng-disabled="composerQuestion.description.length == 0 || selectedGroups.length == 0" ng-click="sendQuestion()"
								style="
								float:right;
								">Send Question</button>
							</div>
						</div>
						
						<!-- Tutor Waiting for Answers -->
						<div class="tutor-qa-answers-received" ng-repeat="(uuid, question) in questions">
							<div class="tutor-qa-answers-received-header">
								Question {{$index + 1}}
								<div class="tutor-qa-grade-question-container">
									<button class="default-style-button" ng-if="isQuestionAnswered(uuid)" ng-disabled="question.graded" ng-click="gradeQuestion(uuid)"
									style="
									vertical-align:baseline;
									">ANNOUNCE</button>	
								</div>
							</div>
							
							<div class="tutor-qa-answers-received-question-container">
								<h3 class="tutor-qa-answers-received-question" ng-bind-html="question.description">
								</h3>
							</div>
							
							<div class="tutor-qa-answers-received-divider">
							</div>
							
							<div class="tutor-qa-received-answer-container" 
							ng-repeat="group in question.groupNames">
								<div class="tutor-qa-received-answer-header">
									{{group}}
									<div class="font tutor-qa-received-answer-status">
										<div class="received-answer-status-text" ng-show="!question.groupAnswers[group].answered">
											Status: Waiting for Answer...
										</div>
										<div class="received-answer-status-text" ng-show="question.groupAnswers[group].answered">
											Status: Answered by {{question.groupAnswers[group].student}}
										</div>
									</div>
								</div>
								
								<div class="tutor-qa-received-answer-body" ng-show="question.groupAnswers[group].answered">
									<div class="tutor-qa-received-answer-description" ng-bind-html="question.groupAnswers[group].description">
									</div>
									<div class="tutor-qa-explanation-container">
										<div class="tutor-qa-explanation">
											<textarea class="tutor-qa-explanation-input" ng-model="question.groupAnswers[group].explanation"
											placeholder="Comments" type="text"  ng-trim="false" ng-disabled="question.graded"
											style="
											border: {{(question.groupAnswers[group].experience > 0 ? '0.5vw solid' : 'none')}};
											border-color: {{question.groupAnswers[group].experience == 1 ? 'red' : (question.groupAnswers[group].experience == 5 ? 'orange' : (question.groupAnswers[group].experience == 10 ? 'green' : 'blue'))}};
											border-left: 0.5vw solid #635f54;
											">
											</textarea>
										</div>
										
										<div class="tutor-qa-grade-container">
											<button class="grading-button" ng-click="question.groupAnswers[group].experience = 1" ng-disabled="question.graded"
											style="
											background-color: red;
											">
												Bleh
											</button>
											
											<button class="grading-button" ng-click="question.groupAnswers[group].experience = 5" ng-disabled="question.graded"
											style="
											background-color: orange;
											">
												Meh
											</button>
											
											<button class="grading-button" ng-click="question.groupAnswers[group].experience = 10" ng-disabled="question.graded"
											style="
											background-color: green;
											">
												Ooh
											</button>
											
											<button class="grading-button" ng-click="question.groupAnswers[group].experience = 25" ng-disabled="question.graded"
											style="
											background-color: blue;
											">
												Wow
											</button>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					<div ng-if="showPrompt == true && socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'tutor'" class="tutor-qa-prompt-window">
						<!-- Background screen -->
						<div class="tutor-qa-prompt-overlay">
						</div>
						<div class="tutor-qa-prompt-container">
							<div class="tutor-qa-prompt-header">
								OVERDRIVE
							</div>
							
							<div class="tutor-qa-prompt-text">
								<p>The mighty fall, and you have lost one of your many lives. Do our heroes enter overdrive and reap extra rewards for their conquest...Or do you live to fight another round.</p>
								<p>(Choosing to go into overdrive mode will allow students to get extra rewards based on their performance in the current round.)</p>
							</div>
							
							<div class="tutor-qa-options-container">
								<div class="overdrive-mode-toggle">
									<button class="default-style-button" ng-click="startBattle()"
									style="
										float:right;
									">
										OVERDRIVE
									</button>
								</div>
								
								<div class="respawn-mode-toggle">
									<button class="default-style-button" ng-click="respawn()"
									style="
										float:left;
									">
										RESPAWN
									</button>
								</div>
							</div>
						</div>
					</div>
				</div>
                
                <div ng-controller="studentCtrl"> <!-- Tutee View -->
					<div class="student-qa-left-container" ng-if="socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'student'">
						<div class="student-qa-tutor-details-container">
							<div class="student-qa-tutor-name-header">
								{{tutorInfo.username}}
							</div>
							
							<div class="student-qa-tutor-avatar-container">
								<div class="student-qa-tutor-avatar-icon"
								ng-style="{'background-image' : 'url(' + tutorInfo.icon + ')'}">
								</div>
							</div>
							<div class="student-qa-tutor-health-container">
								<div class="student-qa-tutor-health-text">
										Health: {{health}} / {{maxHealth}}
								</div>
								<div class="progress-bar progress-bar-danger" role="progressbar" aria-valuenow="{{health/maxHealth * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{health/maxHealth * 100}}%">
								</div>
							</div>
						</div>
						
						<div class="active-users-container"
						style="
						padding-bottom:1.5vw;
						">
							<div class="active-users-header">
								Active Users
							</div>
							
							<div ng-controller="activeUsersCtrl">
								<div class="active-users-list-container" id="userlist-container" ng-if="socket.getConnectionState() == socket.CONNECTED()">
									<!-- List of Groups -->
									<div class="active-users-list">
										<div class="active-users-list-group-container">
											<div class="select-group"
											ng-class="{'selected' : selectedGroup == ($index + groupRangeIndex)}"
											ng-repeat="group in socket.getAllSocketGroups() | limitTo : 4 : groupRangeIndex"
											ng-click="setSelectedGroup($index + groupRangeIndex)"
											style="
												width:5.6vw;
											">
												<button class="select-group-button"
												style="
												width:5.6vw;
												">
													{{group}}
												</button>
											</div>
										</div>
									</div>
									<div class="scroll-bar-container">
										<div class="scroll-bar-text">
											{{socket.getAllSocketGroups()[selectedGroup]}}
										</div>
										<div class="users-list-scroll-left"
										ng-click="scrollGroupList(-1)">
										</div>
										<div class="users-list-scroll-right"
										ng-click="scrollGroupList(1)">
										</div>
									</div>
									
									<!-- List and Toggle Tutees in Groups -->
									<div class="">
										<div class="user-active-list">
											<div class="user-active"
											ng-repeat="user in users[socket.getAllSocketGroups()[selectedGroup]]"
											ng-class="{'active' : selectedUsers.indexOf (user.socketId) >= 0 }">
												<div class="user-active-text"
												ng-click="selectUser(user.socketId);">
													{{user.username}}
												</div>
												<div class="user-active-tag"
												ng-show="user.userId == userId">
													You
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				
                	<div class="student-qa-center-container" ng-if="socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'student'">
						<!-- Combat log header -->
						<div class="combat-log-header-container">
							<div class="combat-log-header">
								COMBAT LOG
							</div>
						</div>
						
						<!-- Tutee Receive Questions -->
						<div class="student-qa-question-received-container" ng-repeat="(uuid, question) in questions">
							<div class="student-qa-question-received-header">
								Question {{$index + 1}}
								<div class="student-qa-answer-question-container">
									<button class="default-style-button" ng-if="hasAllVotes(uuid) && !question.submitted" ng-click="submitAnswer(uuid)"
									style="
									vertical-align:baseline;
									">ATTACK</button>	
								</div>
							</div>
							
							<div class="student-qa-question-received-description-container">
								<h3 class="student-qa-question-received-description" ng-bind-html="question.description">
								</h3>
							</div>
							
							<div class="student-qa-question-received-divider">
							</div>
							
							<div class="student-qa-question-received-answers-container"
							ng-repeat="answer in question.answers">
								<div class="student-qa-question-received-answer-header">
									{{answer.student.username}}
									<div class="student-qa-question-received-vote-count">
										<div class="answer-votes">
											Votes: {{answer.selectedCount}}
										</div>
									</div>
								</div>
								
								<div class="student-qa-question-received-answer">
									<div class="student-qa-question-received-answer-container">
										<textarea class="student-qa-question-received-answer-input" 
										ng-model="answer.description"
										placeholder="{{answer.owned ? 'Type your answer here...' : 'Waiting for answer...'}}" type="text"  ng-trim="false"
										ng-disabled="question.submitted || !answer.owned"></textarea>
										
										<button class="default-style-button" ng-click="updateAnswer(uuid)" ng-disabled="question.submitted" ng-show="answer.owned"
										style="
										position:absolute;
										right:0;
										bottom:0;
										outline:0.5vw solid #dad4bb;
										">Update</button>
									</div>
									
									<div class="student-qa-question-received-avatar-container"
									style="
										border: {{(answer.selected ? '0.5vw solid' : '0vw solid')}};
									">
										<div class="student-qa-question-received-avatar"
										ng-style="{'background-image' : 'url(' + answer.student.userAvatar.icon + ')'}">
										</div>
										
										<div class="student-qa-question-received-vote-container">
											<button class="default-style-button" ng-click="selectAnswer(uuid, $index)"  ng-disabled="question.submitted"
											style="
											outline:0.5vw solid;
											outline-color: {{(answer.selected ? '#635f54' : '#dad4bb')}};
											">
											Vote
											</button>
										</div>
									</div>
								</div>
							</div>
							
							<div ng-show="question.submitted">
								<div class="student-qa-question-received-status">
									{{question.graded ? 'Grading Results' : 'Status : Waiting for grading...'}}
								</div>
							</div>
							
							<div ng-show="question.graded">
								<div class="student-qa-graded-answer-container"
								ng-repeat="group in question.groupNames">
									<div class="student-qa-graded-answer-header">
										{{group}}
										<div class="student-qa-graded-answer-status">
											<div class="answer-source" ng-show="question.groupAnswers[group].answered">
												Answered by {{question.groupAnswers[group].student}}
											</div>
										</div>
									</div>
									
									<div class="student-qa-graded-answer-body">
										<div class="student-qa-graded-answer-description" ng-bind-html="question.groupAnswers[group].description">
										</div>
										<div class="student-qa-explanation-container">
											<div class="student-qa-explanation">
												<div class="student-qa-explanation-input" ng-bind-html="question.groupAnswers[group].explanation"
												style="
												border: {{(question.groupAnswers[group].experience > 0 ? '0.5vw solid' : 'none')}};
												border-color: {{question.groupAnswers[group].experience == 1 ? 'red' : (question.groupAnswers[group].experience == 5 ? 'orange' : (question.groupAnswers[group].experience == 10 ? 'green' : 'blue'))}};
												">
												</div>
											</div>
											
											<div class="student-qa-grade-container">
												<button class="grading-button" ng-disabled="question.groupAnswers[group].experience != 1"
												style="
												background-color: red;
												">
													Bleh
												</button>
								
												<button class="grading-button" ng-disabled="question.groupAnswers[group].experience != 5"
												style="
												background-color: orange;
												">
													Meh
												</button>
												
												<button class="grading-button" ng-disabled="question.groupAnswers[group].experience != 10"
												style="
												background-color: green;
												">
													Ooh
												</button>
												
												<button class="grading-button" ng-disabled="question.groupAnswers[group].experience != 25"
												style="
												background-color: blue;
												">
													Wow
												</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
					
					<div class="student-qa-right-container" ng-if="socket.getConnectionState() == socket.CONNECTED() && socket.getUserType() == 'student'">
						<div class="student-qa-student-details-container">
							<div class="student-qa-student-name-header">
								<%= username %>
							</div>
							
							<div class="student-qa-student-avatar-container">
								<div class="student-qa-student-avatar"
								ng-style="{'background-image' : 'url(' + userInfo.avatar.icon + ')'}">
								</div>
							</div>
							<div class="student-qa-experience-container">
								<div class="student-qa-level">
									Lvl: <span ng-bind-html="userInfo.level"></span>
								</div>
								<div class="student-qa-experience">
									Experience: {{userInfo.exp}} / {{userInfo.expToNext}}
								</div>
								<div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="{{userInfo.exp / userInfo.expToNext * 100}}" aria-valuemin="0" aria-valuemax="100" style="width: {{userInfo.exp / userInfo.expToNext * 100}}%">
								</div>
							</div>
						</div>
					</div>
				</div>
				
				<!-- Message Area -->
				<div ng-controller="chatCtrl">
					<div class="smoothImage" id="chat-container" ng-if="socket.getConnectionState() == socket.CONNECTED()"
					style="
					margin-top:1.5vw;
					margin-left: {{socket.getUserType() == 'student' ? '25vw' : '30vw'}};
					margin-bottom:1.5vw;
					width: {{socket.getUserType() == 'student' ? '50vw' : '65vw'}};
					height: auto;
					">
						<div class="messages-container"
						style="
						position:relative;
						background-color:#DAD4BB;
						padding-top:3vw;
						">
							<div class="messages-header font whiteFont"
							style="
								position:absolute;
								width:100%;
								height:3vw;
								left:0px;
								top:0px;
								font-size:2vw;
								color:#dad4bb;
								background-color:#635f54;
								padding-left:1.5vw;
								text-align:left;
							">
								Messages
							</div>
							
							<!-- List of Groups -->
							<div class="groups-list"
							style="
							height: 4vw;
							margin-left:1.5vw;
							margin-right:1.5vw;
							margin-top:1vw;
							overflow: hidden;
							">
								<div class=""
								style="
								height: 3vw;
								width: 1000vw;
								">
									<div class="select-group"
									ng-class="{'selected' : selectedGroup == ($index + groupRangeIndex)}"
									ng-repeat="group in socket.getSocketGroups() | limitTo : 6 : groupRangeIndex"
									ng-click="setSelectedGroup($index + groupRangeIndex)"
									style="
										width:9.1vw;
										margin-right:1.5vw;
										position:relative;
										display:inline-block;
									">
										<button class="select-group-button font"
										style="
										width:9.1vw;
										font-size:1.5vw;
										">
											{{group}}
										</button>
									</div>
								</div>
							</div>
							<div class=""
							style="
							height: 2vw;
							margin-right:1.5vw;
							margin-left:1.5vw;
							background-color:#b4af9a;
							position:relative;
							">
								<div class="scroll-bar-text font">
									{{socket.getSocketGroups()[selectedGroup]}}
								</div>
								<div class="users-list-scroll-left"
								ng-click="scrollGroupList(-1)">
								</div>
								<div class="users-list-scroll-right"
								ng-click="scrollGroupList(1)">
								</div>
							</div>
							<div class="chat-area" id="messageBox"
							style="
							width: calc(100% - 3vw);
							height:15vw;
							margin-left: 1.5vw;
							padding:0.5vw;
							font-size:1.5vw;
							">
								<div class="messages">
									<div ng-repeat="message in messages[socket.getSocketGroups()[selectedGroup]]"
										ng-class="{'log' : message.type=='log', 'message' : message.type=='message'}"
										data-username="{{message.user}}">
										<div ng-if="message.type == 'chat'">
											<span class="username font lobbyGeneralFontSize" ng-bind="message.user" style="color:{{getUsernameColor(message.user)}};"></span> 
											<span class="messageBody font whiteFont lobbyGeneralFontSize" ng-bind="message.message"></span>
										</div>
										
										<div class="font whiteFont lobbyGeneralFontSize" ng-class="{ 'log' : message.type == 'log'}" ng-if="message.type == 'log'">
											{{ message.message }}
										</div>

										<div class="font whiteFont lobbyGeneralFontSize" ng-class="{ 'damagelog' : message.type == 'damagelog'}" ng-if="message.type == 'damagelog'">
											{{ message.message }}
										</div>
									</div>
								</div>
							</div>
							<div class="typing-messages"
							style="
							width: calc(100% - 3vw);
							height:2vw;
							margin-left: 1.5vw;
							background-color:#b4af9a;
							text-align:center;
							font-size:1.5vw;
							">
								<div ng-repeat="typingMessage in typingMessages">
									<div>
										<span class="username font whiteFont" ng-bind="typingMessage.user" style="color:{{getUsernameColor(typingMessage.user)}};"></span>
										<span class="messageBody font whiteFont" ng-bind="typingMessage.message"></span>
									</div>
								</div>
							</div>
							<div class="message-input-container"
							style="
							width: calc(100% - 3vw);
							height:4.5vw;
							margin-left: 1.5vw;
							">
								<!-- ng-model within ng-if block must reference the data prepended by $parent -->
								<input class="inputMessage font maximumWidth lobbyGeneralFontSize"
								ng-model="$parent.chatMessage" ng-enter="sendMessage()" ng-change="updateTyping()" 
								placeholder="Type Your Message Here!"
								style="
								background-color: #b4af9a;
								border: none;
								border-left: 0.5vw solid;
								border-top: 1px solid;
								border-color: #635f54;
								padding-left: 0.5vw;
								color: #635f54;
								font-size:1.5vw;
								vertical-align: top;
								"/>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
	</body>
</html>

<script src="js/lobby.js" type="application/javascript"></script>